题目：
  老师想给孩子们分发糖果，有 N 个孩子站成了一条直线，老师会根据每个孩子的表现，预先给他们评分。
  你需要按照以下要求，帮助老师给这些孩子分发糖果：
  每个孩子至少分配到 1 个糖果。
  相邻的孩子中，评分高的孩子必须获得更多的糖果。
  那么这样下来，老师至少需要准备多少颗糖果呢？
  
思路：最简单的是使用暴力搜索，初始化一个列表每人都发一块糖，然后遍历，如果等级比右边人高，但糖没右边人多，则比右边人多一块糖；
      如果等级比左边人高，但糖没左边人多，则比左边人多一块糖。遍历一次可能不够，如果继续遍历，使用flag记录是否有糖的变化，
      如果没有变化说明已经分发完毕，结束循环。
代码：
class Solution:
    def candy(self, ratings: List[int]) -> int:
        dp = [1 for _ in ratings]
        flag = True
        while flag:
            flag = False
            for i in range(len(ratings)):
                if i < len(ratings) - 1 and ratings[i] > ratings[i+1] and dp[i] <= dp[i+1]:
                    dp[i] = dp[i+1] + 1
                    flag = True
                if i > 0 and ratings[i] > ratings[i-1] and dp[i] <= dp[i-1]:
                    dp[i] = dp[i-1] +1
                    flag = True
        return sum(dp)
