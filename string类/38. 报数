题目描述：
报数序列是一个整数序列，按照其中的整数的顺序进行报数，得到下一个数。其前五项如下：
1.     1
2.     11
3.     21
4.     1211
5.     111221
1 被读作  "one 1"  ("一个一") , 即 11。
11 被读作 "two 1s" ("两个一"）, 即 21。
21 被读作 "one 2",  "one 1" （"一个二" ,  "一个一") , 即 1211。
给定一个正整数 n（1 ≤ n ≤ 30），输出报数序列的第 n 项。
注意：整数顺序将表示为一个字符串。
###############################################################
例如：
（1）
输入: 1
输出: "1"
（2）
输入: 4
输出: "1211"
###############################################################
解题思路：构造列表，读完一个就放进列表中，使用for循环和if语句记录重复数的个数。使用双指针j和k，j表示重复字符的起始位置，k表示不重复的结束位置。
分三种情况：如果k是字符串的最后一位，且j，k处的字符相等，使用k - j + 1得到重复个数；如果k是字符串的最后一位，且j，k处的字符不相等，使用k-j获得
之前重复字符的个数，同时加上k位置字符的读数；如果k不是最后一位，则使用k-j获得重复字符个数。
python代码:
class Solution(object):
    def countAndSay(self, n):
        """
        :type n: int
        :rtype: str
        """
        temp = ['1']
        for i in range(n):
            t = temp[i]
            j = 0
            st = ''
            for k in range(len(t)):
                if t[k] == t[j] and k == len(t)-1:
                    st += str(k - j + 1)+t[j]
                if t[k] != t[j] and k != len(t)-1:
                    st += str(k-j)+t[j]
                    j = k
                if t[k] != t[j] and k == len(t)-1:
                    st += str(k-j)+t[j]
                    st += str(1) + t[k]
            temp.append(st)
        return temp[n-1]
