题目描述：
给出 n 代表生成括号的对数，请你写出一个函数，使其能够生成所有可能的并且有效的括号组合。
###############################################################
例如：
（1）
例如，给出 n = 3，生成结果为：
[
  "((()))",
  "(()())",
  "(())()",
  "()(())",
  "()()()"
]
###############################################################
解题思路：使用dfs，当左边括号数大于右边括号数就return，如果左边和右边括号书等于n就将字符串append进result中。
python代码:
class Solution:
    def generateParenthesis(self, n: int) -> List[str]:
        def helper(i, j, string, result):
            if i == n and j == n:
                result.append(string)
                return
            if i < j:
                return
            if i < n:
                helper(i+1, j, string+'(', result)
            if j < n:
                helper(i, j+1, string+')', result)
        result = []
        helper(0, 0, '', result)
        return result
